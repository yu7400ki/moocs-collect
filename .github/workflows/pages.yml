name: pages

permissions:
  contents: read
  pages: write
  id-token: write

on:
  release:
    types: [published]
  push:
    branches: [main]
    paths:
      - 'apps/website/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'app-v') || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download latest.json from release assets if this is a release event
      - name: Download release assets
        if: github.event_name == 'release'
        uses: robinraju/release-downloader@v1
        with:
          tag: ${{ github.event.release.tag_name }}
          fileName: "*.json"
          out-file-path: "out"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --filter=website

      # Prepare latest.json for website build
      - name: Prepare latest.json for website
        run: |
          if [ -d "out" ]; then
            # Use latest.json from release assets
            cp out/latest.json apps/website/public/latest.json
          else
            # Download existing latest.json for website-only builds
            curl --retry 10 --retry-delay 5 --retry-all-errors -f -s \
              -o apps/website/public/latest.json \
              https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/latest.json \
              || echo "No existing latest.json found"
          fi

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build website
        run: pnpm --filter=website build --base=${{ steps.pages.outputs.base_path }}

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/website/dist/client

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
